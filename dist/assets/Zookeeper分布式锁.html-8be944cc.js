const e=JSON.parse('{"key":"v-088a2d0d","path":"/zookeeper/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html","title":"Zookeeper分布式锁","lang":"zh-CN","frontmatter":{"title":"Zookeeper分布式锁","author":"程序员子龙","index":true,"icon":"discover","category":["Zookeeper"],"description":"Zookeeper分布式锁 1、非公平锁： 如上实现方式在并发问题比较严重的情况下，性能会下降的比较厉害，主要原因是，所有的连接 都在对同一个节点进行监听，当服务器检测到删除事件时，要通知所有的连接，所有的连接同时 收到事件，再次并发竞争，这就是羊群效应。 2、公平锁 1、直接在/lock节点下创建一个临时有序节点 2、判断是不是/lock节点下最小的...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/zookeeper/Zookeeper%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"Zookeeper分布式锁"}],["meta",{"property":"og:description","content":"Zookeeper分布式锁 1、非公平锁： 如上实现方式在并发问题比较严重的情况下，性能会下降的比较厉害，主要原因是，所有的连接 都在对同一个节点进行监听，当服务器检测到删除事件时，要通知所有的连接，所有的连接同时 收到事件，再次并发竞争，这就是羊群效应。 2、公平锁 1、直接在/lock节点下创建一个临时有序节点 2、判断是不是/lock节点下最小的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T03:36:38.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-15T03:36:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zookeeper分布式锁\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-15T03:36:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[{"level":3,"title":"Zookeeper分布式锁","slug":"zookeeper分布式锁","link":"#zookeeper分布式锁","children":[]},{"level":3,"title":"2、公平锁","slug":"_2、公平锁","link":"#_2、公平锁","children":[]}],"git":{"createdTime":1676432198000,"updatedTime":1676432198000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":1}]},"readingTime":{"minutes":0.85,"words":256},"filePathRelative":"zookeeper/Zookeeper分布式锁.md","localizedDate":"2023年2月15日","autoDesc":true}');export{e as data};
