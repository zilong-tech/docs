const e=JSON.parse('{"key":"v-870541c0","path":"/Java/%E6%B3%9B%E5%9E%8B.html","title":"什么是泛型","lang":"zh-CN","frontmatter":{"title":"什么是泛型","author":"程序员子龙","index":true,"icon":"discover","category":["Java 基础"],"description":"前言 Java 泛型（generics）是 JDK 5 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该机制允许开发者在编译时检测到非法的类型。 泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。 使用泛型机制编写的程序代码要比那些杂乱地使用Object变量，然后再进行强制类型转换的代码具有更好的安全性和可读性。泛型对于集合类...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/Java/%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"什么是泛型"}],["meta",{"property":"og:description","content":"前言 Java 泛型（generics）是 JDK 5 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该机制允许开发者在编译时检测到非法的类型。 泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。 使用泛型机制编写的程序代码要比那些杂乱地使用Object变量，然后再进行强制类型转换的代码具有更好的安全性和可读性。泛型对于集合类..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T08:26:33.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-15T08:26:33.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"什么是泛型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-15T08:26:33.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"泛型的使用","slug":"泛型的使用","link":"#泛型的使用","children":[]},{"level":3,"title":"泛型通配符","slug":"泛型通配符","link":"#泛型通配符","children":[]}],"git":{"createdTime":1676449414000,"updatedTime":1676449593000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":2}]},"readingTime":{"minutes":8.5,"words":2551},"filePathRelative":"Java/泛型.md","localizedDate":"2023年2月15日","autoDesc":true}');export{e as data};
