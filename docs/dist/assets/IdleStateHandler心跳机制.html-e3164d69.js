const e=JSON.parse('{"key":"v-750c6fca","path":"/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IdleStateHandler%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6.html","title":"Netty 心跳机制","lang":"zh-CN","frontmatter":{"title":"Netty 心跳机制","author":"程序员子龙","index":true,"icon":"discover","category":["Netty"],"description":"心跳机制 心跳是在TCP长连接中，客户端和服务端定时向对方发送数据包通知对方自己还在线，保证连接的有效性的一种机制 在服务器和客户端之间一定时间内没有数据交互时, 即处于 idle 状态时, 客户端或服务器会发送一个特殊的数据包给对方, 当接收方收到这个数据报文后, 也立即发送一个特殊的数据报文, 回应发送方, 此即一个 PING-PONG 交互. 自...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IdleStateHandler%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"Netty 心跳机制"}],["meta",{"property":"og:description","content":"心跳机制 心跳是在TCP长连接中，客户端和服务端定时向对方发送数据包通知对方自己还在线，保证连接的有效性的一种机制 在服务器和客户端之间一定时间内没有数据交互时, 即处于 idle 状态时, 客户端或服务器会发送一个特殊的数据包给对方, 当接收方收到这个数据报文后, 也立即发送一个特殊的数据报文, 回应发送方, 此即一个 PING-PONG 交互. 自..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T03:36:38.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-15T03:36:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Netty 心跳机制\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-15T03:36:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[{"level":3,"title":"心跳机制","slug":"心跳机制","link":"#心跳机制","children":[]},{"level":3,"title":"空闲的连接和超时","slug":"空闲的连接和超时","link":"#空闲的连接和超时","children":[]},{"level":3,"title":"IdleStateHandler心跳检测实例","slug":"idlestatehandler心跳检测实例","link":"#idlestatehandler心跳检测实例","children":[]},{"level":3,"title":"客户端","slug":"客户端","link":"#客户端","children":[]},{"level":3,"title":"IdleStateHandler源码分析","slug":"idlestatehandler源码分析","link":"#idlestatehandler源码分析","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1676432198000,"updatedTime":1676432198000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":1}]},"readingTime":{"minutes":4.8,"words":1441},"filePathRelative":"网络编程/IdleStateHandler心跳机制.md","localizedDate":"2023年2月15日","autoDesc":true}');export{e as data};
