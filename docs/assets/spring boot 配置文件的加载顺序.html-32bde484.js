const t=JSON.parse('{"key":"v-29c3dd48","path":"/SpringBoot/spring%20boot%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F.html","title":"spring boot 配置文件的加载顺序","lang":"zh-CN","frontmatter":{"title":"spring boot 配置文件的加载顺序","author":"程序员子龙","index":true,"icon":"discover","category":["SpringBoot"],"description":"SpringApplication 类默认会把以“--”开头的命令行参数转化成应用中可以使用的配置参数，例如，--spring.profiles.active=dev 优先级从高到低，高优先级的配置覆盖低优先级的配置，所有配置会形成互补配置。 1、命令行参数。所有的配置都可以在命令行上进行指定； 2、Java系统属性（System.getPropert...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/SpringBoot/spring%20boot%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"spring boot 配置文件的加载顺序"}],["meta",{"property":"og:description","content":"SpringApplication 类默认会把以“--”开头的命令行参数转化成应用中可以使用的配置参数，例如，--spring.profiles.active=dev 优先级从高到低，高优先级的配置覆盖低优先级的配置，所有配置会形成互补配置。 1、命令行参数。所有的配置都可以在命令行上进行指定； 2、Java系统属性（System.getPropert..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-10T09:01:37.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-10T09:01:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"spring boot 配置文件的加载顺序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-10T09:01:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[],"git":{"createdTime":1676019697000,"updatedTime":1676019697000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":1}]},"readingTime":{"minutes":0.89,"words":268},"filePathRelative":"SpringBoot/spring boot 配置文件的加载顺序.md","localizedDate":"2023年2月10日","autoDesc":true}');export{t as data};
