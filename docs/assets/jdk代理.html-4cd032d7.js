const e=JSON.parse('{"key":"v-5b164ae4","path":"/Java/jdk%E4%BB%A3%E7%90%86.html","title":"JDK 代理","lang":"zh-CN","frontmatter":{"title":"JDK 代理","author":"程序员子龙","index":true,"icon":"discover","category":["Java 基础"],"description":"静态代理 静态代理有两种实现，继承和聚合 继承 需要定义接口或者父类，被代理对象与代理对象一起实现相同的接口或者继续相同父类，代理对象继承目标对象，重新目标对象的方法 ```java //目标对象 public class UserService { public void login(){ System.out.println(\\"login succ...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/Java/jdk%E4%BB%A3%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"JDK 代理"}],["meta",{"property":"og:description","content":"静态代理 静态代理有两种实现，继承和聚合 继承 需要定义接口或者父类，被代理对象与代理对象一起实现相同的接口或者继续相同父类，代理对象继承目标对象，重新目标对象的方法 ```java //目标对象 public class UserService { public void login(){ System.out.println(\\"login succ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T08:23:34.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-15T08:23:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JDK 代理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-15T08:23:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[{"level":3,"title":"静态代理","slug":"静态代理","link":"#静态代理","children":[]},{"level":3,"title":"动态代理","slug":"动态代理","link":"#动态代理","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{"createdTime":1676449414000,"updatedTime":1676449414000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":1}]},"readingTime":{"minutes":4.16,"words":1248},"filePathRelative":"Java/jdk代理.md","localizedDate":"2023年2月15日","autoDesc":true}');export{e as data};
