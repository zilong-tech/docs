const e=JSON.parse('{"key":"v-bbfa51ba","path":"/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/%E7%BA%BF%E7%A8%8B%E6%B1%A0.html","title":"并发编程 -- 线程池","lang":"zh-CN","frontmatter":{"title":"并发编程 -- 线程池","author":"程序员子龙","index":true,"icon":"discover","category":["并发编程"],"description":"线程的创建方式 1、继承Thread，重写run方法 ```java public class MyThread extends Thread { @Override public void run() { for (int x = 0; x < 200; x++) { System.out.println(x); } } } public class...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/%E7%BA%BF%E7%A8%8B%E6%B1%A0.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"并发编程 -- 线程池"}],["meta",{"property":"og:description","content":"线程的创建方式 1、继承Thread，重写run方法 ```java public class MyThread extends Thread { @Override public void run() { for (int x = 0; x < 200; x++) { System.out.println(x); } } } public class..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T03:36:38.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-15T03:36:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"并发编程 -- 线程池\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-15T03:36:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[{"level":3,"title":"线程的创建方式","slug":"线程的创建方式","link":"#线程的创建方式","children":[]},{"level":3,"title":"为什么要用线程池？","slug":"为什么要用线程池","link":"#为什么要用线程池","children":[]},{"level":3,"title":"Executor框架","slug":"executor框架","link":"#executor框架","children":[]},{"level":3,"title":"ThreadPoolExecutor","slug":"threadpoolexecutor","link":"#threadpoolexecutor","children":[]},{"level":3,"title":"线程池的工作机制","slug":"线程池的工作机制","link":"#线程池的工作机制","children":[]},{"level":3,"title":"线程池监控","slug":"线程池监控","link":"#线程池监控","children":[]},{"level":3,"title":"预定义线程池","slug":"预定义线程池","link":"#预定义线程池","children":[]},{"level":3,"title":"CompletionService","slug":"completionservice","link":"#completionservice","children":[]},{"level":3,"title":"Fork/Join框架","slug":"fork-join框架","link":"#fork-join框架","children":[]}],"git":{"createdTime":1676432198000,"updatedTime":1676432198000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":1}]},"readingTime":{"minutes":35.2,"words":10560},"filePathRelative":"并发编程/线程池.md","localizedDate":"2023年2月15日","autoDesc":true}');export{e as data};
