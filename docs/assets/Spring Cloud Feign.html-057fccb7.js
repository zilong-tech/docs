import{_ as n,W as s,X as a,a1 as e}from"./framework-2afc6763.js";const t={},p=e(`<h3 id="什么是feign" tabindex="-1"><a class="header-anchor" href="#什么是feign" aria-hidden="true">#</a> <strong>什么是Feign</strong></h3><p>Feign是Netflix开发的声明式、模板化的HTTP客户端。 Feign可帮助我们更加便捷、优雅地调用HTTP API。</p><p>Feign支持多种注解，例如Feign自带的注解或者JAX-RS注解等。</p><p>Spring Cloud openfeign对Feign进行了增强，使其支持Spring MVC注解，另外还整合了Ribbon和Eureka，从而使得Feign的使用更加方便。</p><p><strong>Feign是一个声明式的web服务客户端，让编写web服务客户端变得非常容易，</strong> 只需创建一个接口并在接口上添加注解即可。</p><p>Feign可以做到使用 HTTP 请求远程服务时就像调用本地方法一样的体验，开发者完全感知不到这是远程方法，更感知不到这是个 HTTP 请求。它像 Dubbo 一样，consumer 直接调用接口方法调用 provider，而不需要通过常规的 Http Client 构造请求再解析返回数据。它解决了让开发者调用远程接口就跟调用本地方法一样，无需关注与远程的交互细节，更无需关注分布式环境开发。</p><p>OpenFeign和Feign的区别： Feign是SpringCloud中的一个轻量级RestFul的Http客户端，内置了Ribbon，用于客户端负载均衡，使用方法是使用Feign的注解去修饰一个接口，客户端调用这个接口那么久是调用远程的微服务了。 OpenFeign在Feign的基础上支持了SpringMVC的注解，如@RequestMapping等。OpenFeign的@FeigenClient注解可以解析SpringMvc的@RequestMapping注解下的接口，通过动态代理的方式产生实现类，实现类中进行负载均衡的微服务远程调用！</p><h3 id="spring-cloud-alibaba快速整合feign" tabindex="-1"><a class="header-anchor" href="#spring-cloud-alibaba快速整合feign" aria-hidden="true">#</a> <strong>Spring Cloud Alibaba快速整合Feign</strong></h3><p>引入依赖</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>&lt;dependency<span class="token punctuation">&gt;</span>
    &lt;groupId<span class="token punctuation">&gt;</span>org.springframework.cloud&lt;/groupId<span class="token punctuation">&gt;</span>
    &lt;artifactId<span class="token punctuation">&gt;</span>spring<span class="token punctuation">-</span>cloud<span class="token punctuation">-</span>starter<span class="token punctuation">-</span>openfeign&lt;/artifactId<span class="token punctuation">&gt;</span>
&lt;/dependency<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编写调用接口+@FeignClient注解，实际开发中，最好单独定义成一个模块，方便引用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">,</span>path <span class="token operator">=</span> <span class="token string">&quot;/order&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderFeignService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/findOrderByUserId/{userId}&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">R</span> <span class="token function">findOrderByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用端在启动类上添加@EnableFeignClients注解，<code>@EnableFeignClients</code>：启用feign进行远程调用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableFeignClients</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignDemoApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">FeignDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4）发起调用，像调用本地方式一样调用远程服务</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Autowired</span>
<span class="token class-name">OrderFeignService</span> orderFeignService<span class="token punctuation">;</span>

<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/findOrderByUserId/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">R</span>  <span class="token function">findOrderByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//feign调用</span>
    <span class="token class-name">R</span> result <span class="token operator">=</span> orderFeignService<span class="token punctuation">.</span><span class="token function">findOrderByUserId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spring-通过-autowired为什么找不到feign接口" tabindex="-1"><a class="header-anchor" href="#spring-通过-autowired为什么找不到feign接口" aria-hidden="true">#</a> spring 通过@Autowired为什么找不到feign接口</h3><p>1、没有使用@EnableFeignClients进行扫描；</p><p>2、使用了@EnableFeignClients进行扫描，但是该注解没有添加basePackages属性，默认扫描的是当前启动类所在的包及其子包下feign，而使用的feign是第三方提供的，不在扫描路径下；</p><p>3、使用了@EnableFeignClients进行扫描，也添加了basePackages属性配置了第三方feign接口所在包路径，但是feign接口定义的方法中，没有添加@RequestMapping等注解；</p><h3 id="修改负载均衡策略" tabindex="-1"><a class="header-anchor" href="#修改负载均衡策略" aria-hidden="true">#</a> 修改负载均衡策略</h3><p>feign其实不是做负载均衡的,负载均衡是ribbon的功能。</p><p>注意下面的代码不能在springboot默认的扫描包路劲下。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Bean
public IRule getRule() {
    return new RandomRule();
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日志配置" tabindex="-1"><a class="header-anchor" href="#日志配置" aria-hidden="true">#</a> 日志配置</h3><h4 id="全局配置" tabindex="-1"><a class="header-anchor" href="#全局配置" aria-hidden="true">#</a> 全局配置</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>  <span class="token comment">// 全局配置</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignConfig</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 日志级别
     * 通过源码可以看到日志等级有 4 种，分别是：
     * NONE：不输出日志。
     * BASIC：只输出请求方法的 URL 和响应的状态码以及接口执行的时间。
     * HEADERS：将 BASIC 信息和请求头信息输出。
     * FULL：输出完整的请求信息。
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Logger<span class="token punctuation">.</span>Level</span> <span class="token function">feignLoggerLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Logger<span class="token punctuation">.</span>Level</span><span class="token punctuation">.</span><span class="token constant">FULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>日志输出：</p><blockquote><p>2022-04-11 15:40:46.731 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] ---&gt; GET http://order/order/findOrderByUserId/2 HTTP/1.1 2022-04-11 15:40:46.732 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] Accept-Encoding: gzip 2022-04-11 15:40:46.732 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] Accept-Encoding: deflate 2022-04-11 15:40:46.732 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] Authorization: 249df155-e75f-4a4e-b682-aee20e4e9d13 2022-04-11 15:40:46.732 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] ---&gt; END HTTP (0-byte body) 2022-04-11 15:40:47.836 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] &lt;--- HTTP/1.1 200 (1104ms) 2022-04-11 15:40:47.836 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] connection: keep-alive 2022-04-11 15:40:47.837 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] content-type: application/json 2022-04-11 15:40:47.837 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] date: Mon, 11 Apr 2022 07:40:47 GMT 2022-04-11 15:40:47.837 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] keep-alive: timeout=60 2022-04-11 15:40:47.837 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] transfer-encoding: chunked 2022-04-11 15:40:47.837 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] 2022-04-11 15:40:47.862 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] {&quot;msg&quot;:&quot;success&quot;,&quot;code&quot;:0,&quot;orders&quot;:[{&quot;id&quot;:2,&quot;userId&quot;:&quot;2&quot;,&quot;commodityCode&quot;:&quot;2&quot;,&quot;count&quot;:0,&quot;amount&quot;:0}]} 2022-04-11 15:40:47.863 DEBUG 29944 --- [nio-8055-exec-4] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] &lt;--- END HTTP (100-byte body)</p></blockquote><p>生产环境中，尽量不要配置成FULL,配置成BASIC</p><blockquote><p>2022-04-11 15:43:11.487 DEBUG 1736 --- [nio-8055-exec-3] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] ---&gt; GET http://order/order/findOrderByUserId/2 HTTP/1.1 2022-04-11 15:43:11.571 DEBUG 1736 --- [nio-8055-exec-3] c.t.feigndemo.feign.OrderFeignService : [OrderFeignService#findOrderByUserId] &lt;--- HTTP/1.1 200 (82ms)</p></blockquote><h4 id="局部配置" tabindex="-1"><a class="header-anchor" href="#局部配置" aria-hidden="true">#</a> 局部配置</h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">client</span><span class="token punctuation">:</span>
    <span class="token key atrule">config</span><span class="token punctuation">:</span>
      <span class="token key atrule">order</span><span class="token punctuation">:</span>  <span class="token comment">#对应微服务</span>
        <span class="token key atrule">loggerLevel</span><span class="token punctuation">:</span> FULL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接口鉴权认证" tabindex="-1"><a class="header-anchor" href="#接口鉴权认证" aria-hidden="true">#</a> 接口鉴权认证</h3><p>通常调用的接口都是有权限控制的，很多时候可能认证的值是通过参数去传递的，还有就是通过请求头去传递认证信息，比如 Basic 认证方式。</p><p>每次 feign 发起http调用之前，会去执行拦截器中的逻辑。</p><p>消费端配置拦截器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignAuthRequestInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">RequestInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">RequestTemplate</span> template<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 业务逻辑  模拟认证逻辑</span>
          <span class="token class-name">String</span> str<span class="token operator">=</span><span class="token string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">Random</span> random<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuffer</span> sb<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> number <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span> access_token <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        template<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span>access_token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册拦截器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FeignAuthRequestInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务端配置拦截器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">// 简单的认证逻辑  从请求头中获取Authorization</span>
        <span class="token class-name">String</span> authorization <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;=========Authorization:&quot;</span><span class="token operator">+</span>authorization<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>authorization<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 从请求参数中获取access_token</span>
            <span class="token class-name">String</span> access_token <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// TODO 实现逻辑</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>access_token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> flag<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册拦截器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurationSupport</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">addInterceptors</span><span class="token punctuation">(</span><span class="token class-name">InterceptorRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        registry<span class="token punctuation">.</span><span class="token function">addInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AuthInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样在请求时候能收到认证信息</p><blockquote><p>2022-04-11 16:23:59.703 INFO 12216 --- [io-8021-exec-10] com.test.interceptor.AuthInterceptor : =========Authorization:XKBuFhAiIh</p></blockquote><p>注册拦截器也可以通过拦截器</p><h3 id="接口超时配置" tabindex="-1"><a class="header-anchor" href="#接口超时配置" aria-hidden="true">#</a> 接口超时配置</h3><p>全局配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FeignConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Request<span class="token punctuation">.</span>Options</span> <span class="token function">options</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// connectTimeoutMillis readTimeoutMillis</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Options</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>局部配置，针对不同微服务</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">client</span><span class="token punctuation">:</span>
    <span class="token key atrule">config</span><span class="token punctuation">:</span>
      <span class="token key atrule">order</span><span class="token punctuation">:</span>  <span class="token comment">#对应微服务</span>
        requestInterceptors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment">#配置拦截器</span>
          com.test.feigndemo.interceptor.FeignAuthRequestInterceptor
        <span class="token comment"># 连接超时时间，默认2s</span>
        <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">3000</span>
        <span class="token comment"># 请求处理超时时间，默认5s</span>
        <span class="token key atrule">readTimeout</span><span class="token punctuation">:</span> <span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="重试配置" tabindex="-1"><a class="header-anchor" href="#重试配置" aria-hidden="true">#</a> 重试配置</h3><p>Feign在调用外部服务的时候，偶尔会出现 **SocketException: Connection reset 、NoHttpResponseException: xxxxxx failed to respond 等异常，**而这些异常并非是因为服务提供方服务不可用，或者负载过高引起的，百度查了查大概原因说是因为在Client 和Server建立链接之后Server端在数据为正常响应之前就关闭了链接导致的异常。</p><p>Feign 调用发起请求处理类 SynchronousMethodHandler 重试代码如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/6819280-c8d5d31b87b9c156.png?imageMogr2/auto-orient/strip|imageView2/2/w/1200/format/webp" alt=""></p><p>Retryer 则是 Feign 的重试策略接口，默认Feign 配置的重试策略是 Retryer.NEVER_RETRY 也就是不走重试，直接异常报错。</p><p><strong>需要注意几点：</strong> 1.Feign默认配置是不走重试策略的，当发生RetryableException异常时直接抛出异常。 2.并非所有的异常都会触发重试策略，只有 RetryableException 异常才会触发异常策略。 3.在默认Feign配置情况下，只有在网络调用时发生 IOException 异常时，才会抛出 RetryableException，也是就是说链接超时、读超时等不不会触发此异常。</p><p>因此常见的 SocketException、NoHttpResponseException、UnknownHostException、HttpRetryException、SocketConnectException、ConnectionClosedException 等异常都可触发Feign重试机制。</p><h4 id="默认重试设置" tabindex="-1"><a class="header-anchor" href="#默认重试设置" aria-hidden="true">#</a> 默认重试设置</h4><p>全局配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Retryer</span> <span class="token function">feignRetryer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//最大请求次数为5，初始间隔时间为100ms，下次间隔时间1.5倍递增，重试间最大间隔时间为1s，</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Retryer<span class="token punctuation">.</span>Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义重试配置" tabindex="-1"><a class="header-anchor" href="#自定义重试配置" aria-hidden="true">#</a> 自定义重试配置</h4><p>局部配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">feign<span class="token punctuation">.</span></span><span class="token class-name">RetryableException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">feign<span class="token punctuation">.</span></span><span class="token class-name">Retryer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token static">SECONDS</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">CommonFeignRetry</span> <span class="token keyword">extends</span> <span class="token class-name">Retryer<span class="token punctuation">.</span>Default</span> <span class="token punctuation">{</span>


    <span class="token keyword">public</span> <span class="token class-name">CommonFeignRetry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//重试10次 最大间隔时间1秒</span>
        <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">toMillis</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token class-name">CommonFeignRetry</span><span class="token punctuation">(</span><span class="token keyword">long</span> period<span class="token punctuation">,</span> <span class="token keyword">long</span> maxPeriod<span class="token punctuation">,</span> <span class="token keyword">int</span> maxAttempts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>period<span class="token punctuation">,</span> maxPeriod<span class="token punctuation">,</span> maxAttempts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">continueOrPropagate</span><span class="token punctuation">(</span><span class="token class-name">RetryableException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;【FeignRetryAble】Message【{}】&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">continueOrPropagate</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Retryer</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonFeignRetry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>指定FeignClient走重试策略：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>}
@FeignClient(name = &quot;test-service&quot;, contextId = &quot;testClient&quot;,
fallbackFactory = FmsBaseClientFallbackFactory.class, configuration = CommonFeignRetryConfig.class)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以在配置文件中指定：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">client</span><span class="token punctuation">:</span>
    <span class="token key atrule">config</span><span class="token punctuation">:</span>
      <span class="token key atrule">feignName</span><span class="token punctuation">:</span>
        <span class="token key atrule">connectTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
        <span class="token key atrule">readTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
        <span class="token key atrule">loggerLevel</span><span class="token punctuation">:</span> full
        <span class="token key atrule">errorDecoder</span><span class="token punctuation">:</span> com.example.SimpleErrorDecoder
        <span class="token key atrule">retryer</span><span class="token punctuation">:</span> com.example.SimpleRetryer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>全局配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>   <span class="token annotation punctuation">@Bean</span>
    <span class="token class-name">Retryer</span> <span class="token function">getRetry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">CommonFeignRetry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端组件配置" tabindex="-1"><a class="header-anchor" href="#客户端组件配置" aria-hidden="true">#</a> 客户端组件配置</h3><p>Feign 中默认使用 JDK 原生的 URLConnection 发送 HTTP 请求，可以集成别的组件来替换掉 URLConnection，比如 Apache HttpClient，OkHttp。</p><h4 id="配置apache-httpclient" tabindex="-1"><a class="header-anchor" href="#配置apache-httpclient" aria-hidden="true">#</a> <strong>配置Apache HttpClient</strong></h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>&lt;<span class="token tag">!--</span> Apache HttpClient <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">&gt;</span>
&lt;dependency<span class="token punctuation">&gt;</span>
    &lt;groupId<span class="token punctuation">&gt;</span>org.apache.httpcomponents&lt;/groupId<span class="token punctuation">&gt;</span>
    &lt;artifactId<span class="token punctuation">&gt;</span>httpclient&lt;/artifactId<span class="token punctuation">&gt;</span>
    &lt;version<span class="token punctuation">&gt;</span>4.5.7&lt;/version<span class="token punctuation">&gt;</span>
&lt;/dependency<span class="token punctuation">&gt;</span>
&lt;dependency<span class="token punctuation">&gt;</span>
    &lt;groupId<span class="token punctuation">&gt;</span>io.github.openfeign&lt;/groupId<span class="token punctuation">&gt;</span>
    &lt;artifactId<span class="token punctuation">&gt;</span>feign<span class="token punctuation">-</span>httpclient&lt;/artifactId<span class="token punctuation">&gt;</span>
    &lt;version<span class="token punctuation">&gt;</span>10.1.0&lt;/version<span class="token punctuation">&gt;</span>
&lt;/dependency<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原理是 spring boot 自动装配</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//org.springframework.cloud.openfeign.FeignAutoConfiguration</span>
<span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">ApacheHttpClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnMissingClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.netflix.loadbalancer.ILoadBalancer&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name">CloseableHttpClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;feign.httpclient.enabled&quot;</span><span class="token punctuation">,</span> matchIfMissing <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">HttpClientFeignConfiguration</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置-okhttp" tabindex="-1"><a class="header-anchor" href="#配置-okhttp" aria-hidden="true">#</a> <strong>配置 OkHttp</strong></h4><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>&lt;dependency<span class="token punctuation">&gt;</span>
    &lt;groupId<span class="token punctuation">&gt;</span>io.github.openfeign&lt;/groupId<span class="token punctuation">&gt;</span>
    &lt;artifactId<span class="token punctuation">&gt;</span>feign<span class="token punctuation">-</span>okhttp&lt;/artifactId<span class="token punctuation">&gt;</span>
&lt;/dependency<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token comment">#feign 使用 okhttp</span>
  <span class="token key atrule">httpclient</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
  <span class="token key atrule">okhttp</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>源码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//org.springframework.cloud.openfeign.FeignAutoConfiguration</span>
<span class="token annotation punctuation">@Configuration</span><span class="token punctuation">(</span>proxyBeanMethods <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnClass</span><span class="token punctuation">(</span><span class="token class-name">OkHttpClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnMissingClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.netflix.loadbalancer.ILoadBalancer&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span></span>OkHttpClient</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ConditionalOnProperty</span><span class="token punctuation">(</span><span class="token string">&quot;feign.okhttp.enabled&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">OkHttpFeignConfiguration</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="压缩配置" tabindex="-1"><a class="header-anchor" href="#压缩配置" aria-hidden="true">#</a> 压缩配置</h3><p>开启压缩可以有效节约网络资源，提升接口性能，我们可以配置 GZIP 来压缩数据</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
    <span class="token key atrule">compression</span><span class="token punctuation">:</span>
      <span class="token key atrule">request</span><span class="token punctuation">:</span>
        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token comment"># 配置压缩的类型</span>
        <span class="token key atrule">mime-types</span><span class="token punctuation">:</span> text/xml<span class="token punctuation">,</span>application/xml<span class="token punctuation">,</span>application/json
        <span class="token comment"># 最小压缩值</span>
        <span class="token key atrule">min-request-size</span><span class="token punctuation">:</span> <span class="token number">2048</span>
      <span class="token key atrule">response</span><span class="token punctuation">:</span>
        <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编码器解码器配置" tabindex="-1"><a class="header-anchor" href="#编码器解码器配置" aria-hidden="true">#</a> <strong>编码器解码器配置</strong></h3><p>Feign 中提供了自定义的编码解码器设置，同时也提供了多种编码器的实现，比如 Gson、Jaxb、Jackson。我们可以用不同的编码解码器来处理数据的传输。如果你想传输 XML 格式的数据，可以自定义 XML 编码解码器来实现获取使用官方提供的 Jaxb。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">Decoder</span> <span class="token function">decoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JacksonDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">Encoder</span> <span class="token function">encoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JacksonEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>yml配置方式</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">client</span><span class="token punctuation">:</span>
    <span class="token key atrule">config</span><span class="token punctuation">:</span>
      <span class="token key atrule">order</span><span class="token punctuation">:</span>  <span class="token comment">#对应微服务</span>

        <span class="token comment"># 配置编解码器</span>
        <span class="token key atrule">encoder</span><span class="token punctuation">:</span> feign.jackson.JacksonEncoder
        <span class="token key atrule">decoder</span><span class="token punctuation">:</span> feign.jackson.JacksonDecoder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,90),i=[p];function o(c,l){return s(),a("div",null,i)}const r=n(t,[["render",o],["__file","Spring Cloud Feign.html.vue"]]);export{r as default};
