import{_ as a,W as e,X as i,Y as n,Z as o,a0 as d,a1 as s,F as l}from"./framework-2afc6763.js";const r={},p=s('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</p><ul><li><p>MongoDB中的一条记录是一个文档，它是由字段和值对组成的数据结构。MongoDB文档类似于JSON对象。字段的值可以包括其他文档，数组和文档数组。MongoDB数据模型和你的对象在内存中的表现形式一样，一目了然的对象模型。</p></li><li><p>同一个集合中可以包含不同字段（类型）的文档对象：同一个集合的字段可能不同</p></li><li><p>线上修改数据模式，修改时应用与数据库都无须下线</p></li></ul><p>​ <img src="https://note.youdao.com/yws/public/resource/5e038498891617c552667b853742fdc1/xmlnote/67E8D4D144954D17BE0E4686F440EAD1/29859" alt="0"></p><p>关系型数据库设计（第三范式）：</p><p>​ <img src="https://note.youdao.com/yws/public/resource/5e038498891617c552667b853742fdc1/xmlnote/E314376CE33E4DCF8593A3F68236610D/29855" alt="0"></p><table><thead><tr><th>数据库</th><th>MongoDB</th><th>MySQL</th></tr></thead><tbody><tr><td>数据库模型</td><td>非关系型</td><td>关系型</td></tr><tr><td>存储方式</td><td>以类JSON的文档的格式存储</td><td>不同引擎有不同的存储方式</td></tr><tr><td>查询语句</td><td>MongoDB查询方式（类似JavaScript的函数）</td><td>SQL语句</td></tr><tr><td>数据处理方式</td><td>基于内存，将热数据存放在物理内存中，从而达到高速读写</td><td>不同引擎有自己的特点</td></tr><tr><td>广泛度</td><td>NoSQL数据库中，比较完善且开源，使用人数在不断增长</td><td>开源数据库，市场份额不断增长</td></tr><tr><td>事务性</td><td>仅支持单文档事务操作，弱一致性</td><td>支持事务操作</td></tr><tr><td>占用空间</td><td>占用空间大</td><td>占用空间小</td></tr><tr><td>join操作</td><td>MongoDB没有join</td><td>MySQL支持join</td></tr></tbody></table><p>系型数据库和文档型数据库主要概念对应</p><table><thead><tr><th></th><th><strong>关系型数据库</strong></th><th><strong>文档型数据库</strong></th></tr></thead><tbody><tr><td><strong>模型实体</strong></td><td>表</td><td>集合</td></tr><tr><td><strong>模型属性</strong></td><td>列</td><td>字段</td></tr><tr><td><strong>模型关系</strong></td><td>表关联</td><td>内嵌数组，引用字段关联</td></tr></tbody></table><h2 id="主要特点" tabindex="-1"><a class="header-anchor" href="#主要特点" aria-hidden="true">#</a> 主要特点</h2><ul><li>MongoDB 是一个面向文档存储的数据库，操作起来比较简单和容易。</li><li>你可以在MongoDB记录中设置任何属性的索引 (如：FirstName=&quot;Sameer&quot;,Address=&quot;8 Gandhi Road&quot;)来实现更快的排序。</li><li>你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。</li><li>如果负载的增加（需要更多的存储空间和更强的处理能力） ，它可以分布在计算机网络中的其他节点上这就是所谓的分片。</li><li>Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</li><li>MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</li><li>Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。</li><li>Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。</li><li>Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</li><li>GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。</li><li>MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</li><li>MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2>',13),c={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},u=s(`<ul><li><strong>MongoDB for Windows 64-bit</strong> 适合 64 位的 Windows Server 2008 R2, Windows 7 , 及最新版本的 Window 系统。</li><li><strong>MongoDB for Windows 32-bit</strong> 适合 32 位的 Window 系统及最新的 Windows Vista。 32 位系统上 MongoDB 的数据库最大为 2GB。</li><li><strong>MongoDB for Windows 64-bit Legacy</strong> 适合 64 位的 Windows Vista, Windows Server 2003, 及 Windows Server 2008 。</li></ul><p>下载 .msi 文件，下载后双击该文件，按操作提示安装即可。</p><p><img src="http://img.xxfxpt.top/202204262156824.png" alt=""></p><p>安装过程中，你可以通过点击 &quot;Custom(自定义)&quot; 按钮来设置你的安装目录。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/10/win-install1.jpg" alt="img"></p><p><img src="https://www.runoob.com/wp-content/uploads/2013/10/win-install2.jpg" alt="img"></p><p>下一步安装 <strong>&quot;install mongoDB compass&quot;</strong> 不勾选（当然你也可以选择安装它，可能需要更久的安装时间），MongoDB Compass 是一个图形界面管理工具，我们可以在后面自己到官网下载安装，下载地址：https://www.mongodb.com/download-center/compass。</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/10/8F7AF133-BE49-4BAB-9F93-88A9D666F6C0.jpg" alt="img"></p><p><strong>创建数据目录</strong></p><p>MongoDB 将数据目录存储在 db 目录下。但是这个数据目录不会主动创建，我们在安装完成后需要创建它。请注意，数据目录应该放在根目录下 (如： C:\\ 或者 D:\\ 等 )。</p><p>我们已经在 C 盘安装了 mongodb，现在让我们创建一个 data 的目录然后在 data 目录里创建 db 目录。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd C:\\
md &quot;\\data\\db&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以通过 window 的资源管理器中创建这些目录，而不一定通过命令行。</p><h2 id="运行-mongodb-服务器" tabindex="-1"><a class="header-anchor" href="#运行-mongodb-服务器" aria-hidden="true">#</a> 运行 MongoDB 服务器</h2><p>为了从命令提示符下运行 MongoDB 服务器，你必须从 MongoDB 目录的 bin 目录中执行 mongod.exe 文件。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>mongod <span class="token parameter variable">--dbpath</span> d:<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>db <span class="token comment"># 这个路径是MongoDB默认的数据存放路径</span>

 mongod  <span class="token parameter variable">--auth</span>              <span class="token comment">#以授权模式启动</span>
 
 mongo <span class="token parameter variable">-u</span> 用户名 <span class="token parameter variable">--host</span> <span class="token number">127.0</span>.0.1:27017 <span class="token comment">#授权方式连接</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h2><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db # 显示当前所在的数据库 

use example # 切换数据库，不存在数据库会直接创建
show databases; #展示所有数据库
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use admin  <span class="token comment"># 设置密码需要切换到admin库</span>
<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span>
   <span class="token punctuation">{</span>
     user: <span class="token string">&quot;demo&quot;</span>,
     pwd: <span class="token string">&quot;123456&quot;</span>,
     roles: <span class="token punctuation">[</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">)</span>
 show <span class="token function">users</span> <span class="token comment"># 查看所有用户信息</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> show <span class="token function">users</span><span class="token punctuation">;</span>
<span class="token punctuation">{</span>
        <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin.demo&quot;</span>,
        <span class="token string">&quot;userId&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;941519b6-b6dd-4d66-ade9-cea6a0f01fc5&quot;</span><span class="token punctuation">)</span>,
        <span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;demo&quot;</span>,
        <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
        <span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                        <span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;root&quot;</span>,
                        <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">]</span>,
        <span class="token string">&quot;mechanisms&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
                <span class="token string">&quot;SCRAM-SHA-1&quot;</span>,
                <span class="token string">&quot;SCRAM-SHA-256&quot;</span>
        <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建集合" tabindex="-1"><a class="header-anchor" href="#创建集合" aria-hidden="true">#</a> 创建集合</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.createCollection(name, options)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><ul><li>name: 要创建的集合名称</li><li>options: 可选参数, 指定有关内存大小及索引的选项</li></ul><p>options 可以是如下参数：</p><table><thead><tr><th style="text-align:left;">字段</th><th style="text-align:left;">类型</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">capped</td><td style="text-align:left;">布尔</td><td style="text-align:left;">（可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档。 <strong>当该值为 true 时，必须指定 size 参数。</strong></td></tr><tr><td style="text-align:left;">autoIndexId</td><td style="text-align:left;">布尔</td><td style="text-align:left;">3.2 之后不再支持该参数。（可选）如为 true，自动在 _id 字段创建索引。默认为 false。</td></tr><tr><td style="text-align:left;">size</td><td style="text-align:left;">数值</td><td style="text-align:left;">（可选）为固定集合指定一个最大值，即字节数。 <strong>如果 capped 为 true，也需要指定该字段。</strong></td></tr><tr><td style="text-align:left;">max</td><td style="text-align:left;">数值</td><td style="text-align:left;">（可选）指定固定集合中包含文档的最大数量。</td></tr></tbody></table><p>在插入文档时，MongoDB 首先检查固定集合的 size 字段，然后检查 max 字段。</p><p>在 MongoDB 中，可以不用创建集合。当插入一些文档时，MongoDB 会自动创建集合。</p><h3 id="添加数据-insert" tabindex="-1"><a class="header-anchor" href="#添加数据-insert" aria-hidden="true">#</a> 添加数据 insert</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.集合.insertOne(&lt;JSON对象&gt;)   // 添加单个文档
db.集合.insertMany([{&lt;JSON对象1&gt;},{&lt;JSON对象2&gt;}])   // 批量添加文档
db.集合.insert()   // 添加单个文档
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> db.user.insertOne<span class="token punctuation">(</span>
<span class="token punctuation">..</span>. <span class="token punctuation">{</span>
<span class="token punctuation">..</span>.  name:<span class="token string">&quot;sue&quot;</span>,
<span class="token punctuation">..</span>.  age:26,
<span class="token punctuation">..</span>.  status:<span class="token string">&quot;pending&quot;</span><span class="token punctuation">}</span>
<span class="token punctuation">..</span>. <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：mongodb的主键名称是_id,可以在插入数据时指定。</p><p><img src="http://img.xxfxpt.top/202205012203812.png" alt=""></p>`,35);function m(g,b){const t=l("ExternalLinkIcon");return e(),i("div",null,[p,n("p",null,[n("a",c,[o("mongodb官网下载"),d(t)])]),u])}const h=a(r,[["render",m],["__file","mongodb入门.html.vue"]]);export{h as default};
