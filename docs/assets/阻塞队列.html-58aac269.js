const t=JSON.parse('{"key":"v-23903238","path":"/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.html","title":"并发编程 -- 阻塞队列","lang":"zh-CN","frontmatter":{"title":"并发编程 -- 阻塞队列","author":"程序员子龙","index":true,"icon":"discover","category":["并发编程"],"description":"什么是阻塞队列 1）支持阻塞的插入方法：意思是当队列满时，队列会阻塞插入元素的线程， 直到队列不满。 2）支持阻塞的移除方法：意思是在队列为空时，获取元素的线程会等待队 列变为非空。 在并发编程中使用生产者和消费者模式能够解决绝大多数并发问题。该模式 通过平衡生产线程和消费线程的工作能力来提高程序整体处理数据的速度。 在线程世界里，生产者就是生产数据的...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"并发编程 -- 阻塞队列"}],["meta",{"property":"og:description","content":"什么是阻塞队列 1）支持阻塞的插入方法：意思是当队列满时，队列会阻塞插入元素的线程， 直到队列不满。 2）支持阻塞的移除方法：意思是在队列为空时，获取元素的线程会等待队 列变为非空。 在并发编程中使用生产者和消费者模式能够解决绝大多数并发问题。该模式 通过平衡生产线程和消费线程的工作能力来提高程序整体处理数据的速度。 在线程世界里，生产者就是生产数据的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-15T12:56:01.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-15T12:56:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"并发编程 -- 阻塞队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-15T12:56:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[],"git":{"createdTime":1676432198000,"updatedTime":1676465761000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":2}]},"readingTime":{"minutes":6.2,"words":1861},"filePathRelative":"并发编程/阻塞队列.md","localizedDate":"2023年2月15日","autoDesc":true}');export{t as data};
