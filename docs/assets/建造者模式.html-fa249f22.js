const e=JSON.parse('{"key":"v-f4d8784a","path":"/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html","title":"建造者模式","lang":"zh-CN","frontmatter":{"title":"建造者模式","author":"程序员子龙","index":true,"icon":"discover","category":["设计模式"],"description":"定义 建造者模式（Builder Pattern）也叫做生成器模式，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。 在建造者模式中，有如下4个角色： ● Product产品类 通常是实现了模板方法模式，也就是有模板方法和基本方法。 ● Builder抽象建造者 规范产品的组建，一般是由子类实现。例子中的CarBuilder就...","head":[["meta",{"property":"og:url","content":"https://zilong-tech.github.io/docs/docs/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"子龙技术"}],["meta",{"property":"og:title","content":"建造者模式"}],["meta",{"property":"og:description","content":"定义 建造者模式（Builder Pattern）也叫做生成器模式，将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。 在建造者模式中，有如下4个角色： ● Product产品类 通常是实现了模板方法模式，也就是有模板方法和基本方法。 ● Builder抽象建造者 规范产品的组建，一般是由子类实现。例子中的CarBuilder就..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-10T09:01:37.000Z"}],["meta",{"property":"article:author","content":"程序员子龙"}],["meta",{"property":"article:modified_time","content":"2023-02-10T09:01:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"建造者模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-10T09:01:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"程序员子龙\\"}]}"]]},"headers":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":3,"title":"建造者模式的优点","slug":"建造者模式的优点","link":"#建造者模式的优点","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1676019697000,"updatedTime":1676019697000,"contributors":[{"name":"javacode","email":"zysspace@163.com","commits":1}]},"readingTime":{"minutes":3.59,"words":1077},"filePathRelative":"设计模式/建造者模式.md","localizedDate":"2023年2月10日","autoDesc":true}');export{e as data};
